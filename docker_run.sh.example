#!/bin/bash

# Create a custom network for container communication
echo "Creating HMS network..."
docker network create hms-network 2>/dev/null || true

# Start PostgreSQL container first
echo "Starting PostgreSQL container..."
docker run --rm -d --name hms-postgres \
  --network hms-network \
  -e POSTGRES_DB=HMS \
  -e POSTGRES_USER=postgres \
  -e POSTGRES_PASSWORD=postgres \
  -p 5433:5432 \
  postgres:15

# Wait for PostgreSQL to be ready
echo "Waiting for PostgreSQL to be ready..."
sleep 10

# Build the Docker image
echo "Building HMS Backend Docker image..."
docker build -t hms-backend .

# Run the HMS Backend container with PostgreSQL configuration
echo "Starting HMS Backend container..."
docker run --rm -d --name hms-backend -p 8080:8080 \
  --network hms-network \
  -e SPRING_DATASOURCE_URL=jdbc:postgresql://hms-postgres:5432/HMS \
  -e SPRING_DATASOURCE_USERNAME=postgres \
  -e SPRING_DATASOURCE_PASSWORD=postgres \
  -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
  -e SPRING_JPA_SHOW_SQL=true \
  -e MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info \
  -e MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always \
  -e JWT_SECRET=your_jwt_secret_here \
  -e JWT_EXPIRATION_MS=86400000 \
  -e SSLCOMMERZ_STORE_ID=your_store_id \
  -e SSLCOMMERZ_STORE_PASSWORD=your_store_password \
  -e SSLCOMMERZ_SANDBOX_URL=https://sandbox.sslcommerz.com \
  -e SSLCOMMERZ_PRODUCTION_URL=https://securepay.sslcommerz.com \
  -e SSLCOMMERZ_ENVIRONMENT=sandbox \
  -e FILE_UPLOAD_DIR=/app/uploads \
  -e NOMINATIM_BASE_URL=https://nominatim.openstreetmap.org/search \
  -e "NOMINATIM_USER_AGENT=HMS_HallManagementSystem/1.0 (contact@your-university.edu)" \
  -e HALL_POSTCODE=1000 \
  -e JAVA_OPTS="-Xms512m -Xmx1g -XX:+UseG1GC" \
  -v $(pwd)/uploads:/app/uploads \
  --health-cmd="curl -f http://localhost:8080/actuator/health || exit 1" \
  --health-interval=30s \
  --health-timeout=10s \
  --health-retries=3 \
  hms-backend

# Wait for the backend to be healthy
echo "Waiting for HMS Backend to be healthy..."
for i in {1..30}; do
  if curl -f http://localhost:8080/actuator/health >/dev/null 2>&1; then
    echo "✅ HMS Backend is healthy and ready!"
    break
  fi
  echo "Waiting for backend to be ready... (attempt $i/30)"
  sleep 5
done

if ! curl -f http://localhost:8080/actuator/health >/dev/null 2>&1; then
  echo "❌ Backend failed to become healthy within 150 seconds"
  echo "Check logs with: docker logs hms-backend"
  exit 1
fi

echo "HMS Backend is starting up with PostgreSQL..."
echo "Backend will be available at: http://localhost:8080"
echo "Health check endpoint: http://localhost:8080/actuator/health"
echo "To view logs: docker logs -f hms-backend"
echo "To check health: docker inspect --format='{{json .State.Health}}' hms-backend"
echo "To stop: docker stop hms-backend hms-postgres && docker network rm hms-network"
