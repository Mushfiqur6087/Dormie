###############################################################################
# ðŸ§ª TEST RUNNER â€“ Dockerfile for running all frontend tests
###############################################################################
FROM node:18-alpine AS test

WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm

# Copy package files first for better cache hits
COPY package.json pnpm-lock.yaml ./

# Install all dependencies (including devDependencies for testing)
RUN pnpm install

# Copy all source code and configuration files
COPY . .

# Set environment variables for testing
ENV NODE_ENV=test
ENV CI=true

# Create coverage directory with proper permissions
RUN mkdir -p /app/coverage && chmod 755 /app/coverage

# Expose port (not strictly necessary for tests, but useful for debugging)
EXPOSE 3000

# Run tests with coverage by default
# Options explained:
# --coverage: Generate test coverage report
# --watchAll=false: Don't watch for file changes (important for CI/containers)
# --passWithNoTests: Don't fail if no tests are found
# --verbose: Show individual test results
# --detectOpenHandles: Detect handles that prevent Jest from exiting cleanly
CMD ["pnpm", "run", "test", "--coverage", "--watchAll=false", "--passWithNoTests", "--verbose", "--detectOpenHandles"]

###############################################################################
# Alternative commands you can use:
# 
# For basic test run without coverage:
# CMD ["pnpm", "run", "test", "--watchAll=false"]
#
# For test run with custom reporters:
# CMD ["pnpm", "run", "test", "--coverage", "--watchAll=false", "--reporters=default", "--reporters=jest-junit"]
#
# For running specific test files:
# CMD ["pnpm", "run", "test", "__tests__/HomePage.test.jsx", "--watchAll=false"]
###############################################################################
